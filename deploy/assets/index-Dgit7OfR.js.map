{"version":3,"file":"index-Dgit7OfR.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/Card.tsx","../../node_modules/lucide-react/dist/esm/defaultAttributes.js","../../node_modules/lucide-react/dist/esm/createLucideIcon.js","../../node_modules/lucide-react/dist/esm/icons/arrow-down-circle.js","../../node_modules/lucide-react/dist/esm/icons/arrow-down.js","../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../node_modules/lucide-react/dist/esm/icons/bot.js","../../node_modules/lucide-react/dist/esm/icons/club.js","../../node_modules/lucide-react/dist/esm/icons/copy.js","../../node_modules/lucide-react/dist/esm/icons/diamond.js","../../node_modules/lucide-react/dist/esm/icons/layers.js","../../node_modules/lucide-react/dist/esm/icons/library.js","../../node_modules/lucide-react/dist/esm/icons/loader.js","../../node_modules/lucide-react/dist/esm/icons/trophy.js","../../node_modules/lucide-react/dist/esm/icons/user.js","../../node_modules/lucide-react/dist/esm/icons/users.js","../../src/components/PlayerHand.tsx","../../src/components/TableCards.tsx","../../src/components/TurnIndicator.tsx","../../src/components/CapturedCards.tsx","../../src/components/CardAnimation.tsx","../../src/components/ComputerMoveIndicator.tsx","../../src/components/GameOverModal.tsx","../../src/utils/deck.ts","../../src/utils/scoring.ts","../../src/utils/cardManagement.ts","../../src/utils/endGame.ts","../../src/hooks/useGameState.ts","../../src/utils/gameLogic.ts","../../src/hooks/useCardSelection.ts","../../src/utils/computerPlayer.ts","../../src/hooks/useComputerPlayer.ts","../../src/components/GameBoard.tsx","../../src/components/GameModeSelector.tsx","../../src/config.ts","../../src/services/socketService.ts","../../src/components/WaitingRoom.tsx","../../src/components/LobbyScreen.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\nimport { Card as CardType } from '../types/game';\nimport { motion } from 'framer-motion';\n\ninterface CardProps {\n  card: CardType;\n  onClick?: () => void;\n  isSelectable?: boolean;\n  isHidden?: boolean;\n  isSelected?: boolean;\n}\n\nconst Card: React.FC<CardProps> = ({ \n  card, \n  onClick, \n  isSelectable = false, \n  isHidden = false,\n  isSelected = false\n}) => {\n  const getSuitColor = (suit: string) => {\n    return suit === 'hearts' || suit === 'diamonds' ? 'text-red-600' : 'text-black';\n  };\n\n  const getSuitSymbol = (suit: string) => {\n    switch (suit) {\n      case 'hearts': return '♥';\n      case 'diamonds': return '♦';\n      case 'clubs': return '♣';\n      case 'spades': return '♠';\n      default: return '';\n    }\n  };\n\n  if (isHidden) {\n    return (\n      <motion.div \n        className=\"w-14 h-20 sm:w-16 sm:h-24 md:w-20 md:h-32 lg:w-24 lg:h-36\n          bg-gradient-to-br from-blue-600 to-blue-800\n          rounded-xl border-2 border-white/20\n          shadow-lg hover:shadow-xl transition-shadow\n          flex items-center justify-center p-2 m-1\n          transform-gpu cursor-default\"\n      >\n        <div className=\"w-full h-full rounded-lg border-2 border-white/10 bg-white/5 \n          flex items-center justify-center\">\n          <div className=\"text-white/20 text-2xl sm:text-3xl md:text-4xl font-bold\">♠</div>\n        </div>\n      </motion.div>\n    );\n  }\n\n  return (\n    <motion.div \n      whileHover={isSelectable ? { scale: 1.05, y: -8 } : {}}\n      whileTap={isSelectable ? { scale: 0.95 } : {}}\n      onClick={isSelectable ? onClick : undefined}\n      className={`\n        w-14 h-20 sm:w-16 sm:h-24 md:w-20 md:h-32 lg:w-24 lg:h-36\n        bg-white rounded-xl border-4 \n        ${isSelected \n          ? 'border-yellow-400 ring-4 ring-yellow-400/50 shadow-yellow-400/30' \n          : isSelectable \n            ? 'border-blue-300 hover:border-blue-500 cursor-pointer' \n            : 'border-gray-300 cursor-default'\n        }\n        shadow-lg hover:shadow-xl \n        transition-all duration-200\n        flex flex-col justify-between p-1 sm:p-2 m-1\n        transform-gpu\n      `}\n    >\n      <div className={`text-xs sm:text-sm md:text-base lg:text-lg font-bold ${getSuitColor(card.suit)}`}>\n        {card.rank}\n        <span className=\"ml-1\">{getSuitSymbol(card.suit)}</span>\n      </div>\n      <div className={`text-xl sm:text-2xl md:text-3xl lg:text-4xl self-center ${getSuitColor(card.suit)}`}>\n        {getSuitSymbol(card.suit)}\n      </div>\n      <div className={`text-xs sm:text-sm md:text-base lg:text-lg font-bold rotate-180 ${getSuitColor(card.suit)}`}>\n        {card.rank}\n        <span className=\"ml-1\">{getSuitSymbol(card.suit)}</span>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Card;","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: [\"lucide\", `lucide-${toKebabCase(iconName)}`, className].join(\" \"),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowDownCircle = createLucideIcon(\"ArrowDownCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 8v8\", key: \"napkw2\" }],\n  [\"path\", { d: \"m8 12 4 4 4-4\", key: \"k98ssh\" }]\n]);\n\nexport { ArrowDownCircle as default };\n//# sourceMappingURL=arrow-down-circle.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowDown = createLucideIcon(\"ArrowDown\", [\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }],\n  [\"path\", { d: \"m19 12-7 7-7-7\", key: \"1idqje\" }]\n]);\n\nexport { ArrowDown as default };\n//# sourceMappingURL=arrow-down.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowRight = createLucideIcon(\"ArrowRight\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n]);\n\nexport { ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Bot = createLucideIcon(\"Bot\", [\n  [\"path\", { d: \"M12 8V4H8\", key: \"hb8ula\" }],\n  [\"rect\", { width: \"16\", height: \"12\", x: \"4\", y: \"8\", rx: \"2\", key: \"enze0r\" }],\n  [\"path\", { d: \"M2 14h2\", key: \"vft8re\" }],\n  [\"path\", { d: \"M20 14h2\", key: \"4cs60a\" }],\n  [\"path\", { d: \"M15 13v2\", key: \"1xurst\" }],\n  [\"path\", { d: \"M9 13v2\", key: \"rq6x2g\" }]\n]);\n\nexport { Bot as default };\n//# sourceMappingURL=bot.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Club = createLucideIcon(\"Club\", [\n  [\n    \"path\",\n    {\n      d: \"M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z\",\n      key: \"27yuqz\"\n    }\n  ],\n  [\"path\", { d: \"M12 17.66L12 22\", key: \"ogfahf\" }]\n]);\n\nexport { Club as default };\n//# sourceMappingURL=club.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Copy = createLucideIcon(\"Copy\", [\n  [\"rect\", { width: \"14\", height: \"14\", x: \"8\", y: \"8\", rx: \"2\", ry: \"2\", key: \"17jyea\" }],\n  [\"path\", { d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\", key: \"zix9uf\" }]\n]);\n\nexport { Copy as default };\n//# sourceMappingURL=copy.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Diamond = createLucideIcon(\"Diamond\", [\n  [\n    \"path\",\n    {\n      d: \"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z\",\n      key: \"1f1r0c\"\n    }\n  ]\n]);\n\nexport { Diamond as default };\n//# sourceMappingURL=diamond.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Layers = createLucideIcon(\"Layers\", [\n  [\n    \"path\",\n    {\n      d: \"m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z\",\n      key: \"8b97xw\"\n    }\n  ],\n  [\"path\", { d: \"m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65\", key: \"dd6zsq\" }],\n  [\"path\", { d: \"m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65\", key: \"ep9fru\" }]\n]);\n\nexport { Layers as default };\n//# sourceMappingURL=layers.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Library = createLucideIcon(\"Library\", [\n  [\"path\", { d: \"m16 6 4 14\", key: \"ji33uf\" }],\n  [\"path\", { d: \"M12 6v14\", key: \"1n7gus\" }],\n  [\"path\", { d: \"M8 8v12\", key: \"1gg7y9\" }],\n  [\"path\", { d: \"M4 4v16\", key: \"6qkkli\" }]\n]);\n\nexport { Library as default };\n//# sourceMappingURL=library.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Loader = createLucideIcon(\"Loader\", [\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"2\", y2: \"6\", key: \"gza1u7\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"18\", y2: \"22\", key: \"1qhbu9\" }],\n  [\"line\", { x1: \"4.93\", x2: \"7.76\", y1: \"4.93\", y2: \"7.76\", key: \"xae44r\" }],\n  [\"line\", { x1: \"16.24\", x2: \"19.07\", y1: \"16.24\", y2: \"19.07\", key: \"bxnmvf\" }],\n  [\"line\", { x1: \"2\", x2: \"6\", y1: \"12\", y2: \"12\", key: \"89khin\" }],\n  [\"line\", { x1: \"18\", x2: \"22\", y1: \"12\", y2: \"12\", key: \"pb8tfm\" }],\n  [\"line\", { x1: \"4.93\", x2: \"7.76\", y1: \"19.07\", y2: \"16.24\", key: \"1uxjnu\" }],\n  [\"line\", { x1: \"16.24\", x2: \"19.07\", y1: \"7.76\", y2: \"4.93\", key: \"6duxfx\" }]\n]);\n\nexport { Loader as default };\n//# sourceMappingURL=loader.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Trophy = createLucideIcon(\"Trophy\", [\n  [\"path\", { d: \"M6 9H4.5a2.5 2.5 0 0 1 0-5H6\", key: \"17hqa7\" }],\n  [\"path\", { d: \"M18 9h1.5a2.5 2.5 0 0 0 0-5H18\", key: \"lmptdp\" }],\n  [\"path\", { d: \"M4 22h16\", key: \"57wxv0\" }],\n  [\"path\", { d: \"M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22\", key: \"1nw9bq\" }],\n  [\"path\", { d: \"M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22\", key: \"1np0yb\" }],\n  [\"path\", { d: \"M18 2H6v7a6 6 0 0 0 12 0V2Z\", key: \"u46fv3\" }]\n]);\n\nexport { Trophy as default };\n//# sourceMappingURL=trophy.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst User = createLucideIcon(\"User\", [\n  [\"path\", { d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\", key: \"975kel\" }],\n  [\"circle\", { cx: \"12\", cy: \"7\", r: \"4\", key: \"17ys0d\" }]\n]);\n\nexport { User as default };\n//# sourceMappingURL=user.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Users = createLucideIcon(\"Users\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"path\", { d: \"M22 21v-2a4 4 0 0 0-3-3.87\", key: \"kshegd\" }],\n  [\"path\", { d: \"M16 3.13a4 4 0 0 1 0 7.75\", key: \"1da9ce\" }]\n]);\n\nexport { Users as default };\n//# sourceMappingURL=users.js.map\n","import React from 'react';\nimport { Card as CardType } from '../types/game';\nimport Card from './Card';\nimport { motion } from 'framer-motion';\nimport { User } from 'lucide-react';\n\ninterface PlayerHandProps {\n  cards: CardType[];\n  isOpponent?: boolean;\n  selectedCard?: CardType | null;\n  onCardClick?: (card: CardType) => void;\n  isCurrentPlayer?: boolean;\n  playerName: string;\n  score: number;\n}\n\nconst PlayerHand: React.FC<PlayerHandProps> = ({\n  cards,\n  isOpponent = false,\n  selectedCard,\n  onCardClick,\n  isCurrentPlayer = false,\n  playerName,\n  score\n}) => {\n  return (\n    <motion.div \n      className={`mb-4 sm:mb-8 ${isCurrentPlayer ? 'opacity-100' : 'opacity-70'}`}\n      initial={{ opacity: 0, y: isOpponent ? -20 : 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"text-center mb-2 sm:mb-4\">\n        <motion.div \n          className=\"inline-flex items-center gap-2 bg-blue-600/80 backdrop-blur-sm \n            px-3 sm:px-4 py-1 sm:py-2 rounded-full shadow-lg\"\n          whileHover={{ scale: 1.05 }}\n        >\n          <User className=\"w-4 h-4 sm:w-5 sm:h-5 text-white\" />\n          <div className=\"text-white text-sm sm:text-base md:text-lg font-bold\">\n            {playerName}\n          </div>\n        </motion.div>\n      </div>\n      <div className=\"flex justify-center flex-wrap gap-1 sm:gap-2\">\n        {cards.map((card, index) => (\n          <motion.div \n            key={index}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3, delay: index * 0.1 }}\n            className={selectedCard === card ? 'transform -translate-y-4' : ''}\n          >\n            <Card\n              card={card}\n              isSelectable={isCurrentPlayer && !isOpponent}\n              onClick={() => onCardClick?.(card)}\n              isHidden={isOpponent}\n            />\n          </motion.div>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default PlayerHand;","import React from 'react';\nimport { Card as CardType } from '../types/game';\nimport Card from './Card';\nimport { motion } from 'framer-motion';\n\ninterface TableCardsProps {\n  cards: CardType[];\n  selectedCards: CardType[];\n  onCardClick: (card: CardType) => void;\n  isSelectable: boolean;\n}\n\nconst TableCards: React.FC<TableCardsProps> = ({\n  cards,\n  selectedCards,\n  onCardClick,\n  isSelectable\n}) => {\n  return (\n    <motion.div \n      className={`\n        bg-green-700/50 backdrop-blur-sm p-2 sm:p-4 rounded-xl sm:rounded-2xl mb-4 sm:mb-8 \n        min-h-[160px] sm:min-h-[200px]\n        border-4 ${isSelectable ? 'border-blue-300/50' : 'border-green-600/30'} \n        shadow-inner transition-all duration-200\n        ${isSelectable ? 'hover:border-blue-300' : ''}\n      `}\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"flex flex-wrap justify-center gap-1 sm:gap-2 md:gap-4\">\n        {cards.map((card, index) => (\n          <motion.div\n            key={`${card.suit}-${card.rank}`}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3, delay: index * 0.1 }}\n          >\n            <Card\n              card={card}\n              isSelectable={isSelectable}\n              onClick={() => onCardClick(card)}\n              isSelected={selectedCards.includes(card)}\n            />\n          </motion.div>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default TableCards;","import React from 'react';\nimport { ArrowDownCircle } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface TurnIndicatorProps {\n  currentPlayer: number;\n  isComputerThinking?: boolean;\n  deckCount: number;\n  tableCardsCount: number;\n}\n\nconst TurnIndicator: React.FC<TurnIndicatorProps> = ({ \n  currentPlayer,\n  isComputerThinking = false,\n  deckCount,\n  tableCardsCount\n}) => {\n  return (\n    <div className=\"flex flex-col items-center gap-2 mb-4 sm:mb-6\">\n      <motion.div \n        className={`\n          px-3 sm:px-6 py-2 sm:py-3 rounded-full shadow-lg flex items-center gap-2\n          ${isComputerThinking \n            ? 'bg-gradient-to-r from-blue-600 to-blue-800' \n            : 'bg-gradient-to-r from-blue-600 to-blue-500'\n          } text-white\n        `}\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        whileHover={{ scale: 1.05 }}\n      >\n        <motion.div\n          animate={isComputerThinking ? { rotate: 360 } : {}}\n          transition={{ duration: 2, repeat: isComputerThinking ? Infinity : 0, ease: \"linear\" }}\n        >\n          <ArrowDownCircle className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n        </motion.div>\n        <span className=\"text-sm sm:text-base md:text-lg font-bold\">\n          {isComputerThinking \n            ? \"L'ordinateur réfléchit...\" \n            : `Tour du Joueur ${currentPlayer}`\n          }\n        </span>\n      </motion.div>\n\n      <div className=\"flex gap-4 text-white text-xs sm:text-sm\">\n        <span>Pioche: {deckCount}</span>\n        <span>Table: {tableCardsCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default TurnIndicator;","import React from 'react';\nimport { Card as CardType } from '../types/game';\nimport { LayersIcon } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface CapturedCardsProps {\n  cards: CardType[];\n  playerName: string;\n}\n\nconst CapturedCards: React.FC<CapturedCardsProps> = ({ cards, playerName }) => {\n  if (cards.length === 0) return null;\n\n  const clubsCount = cards.filter(card => card.suit === 'clubs').length;\n  const hasTenOfDiamonds = cards.some(card => card.rank === '10' && card.suit === 'diamonds');\n  const hasTwoOfClubs = cards.some(card => card.rank === '2' && card.suit === 'clubs');\n\n  return (\n    <motion.div \n      className=\"mb-4 flex items-center justify-center\"\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <motion.div \n        className=\"bg-white/10 backdrop-blur-sm rounded-full px-6 py-2 \n          flex items-center gap-3 shadow-lg border border-white/20\"\n        whileHover={{ scale: 1.05 }}\n      >\n        <LayersIcon className=\"w-5 h-5 text-white\" />\n        <div className=\"flex items-center gap-4\">\n          <span className=\"text-white text-sm sm:text-base\">\n            Cartes: {cards.length}\n          </span>\n\n          <span className=\"text-white text-sm sm:text-base flex items-center gap-2\">\n            <span className=\"text-2xl\">♣</span>\n            {clubsCount}\n          </span>\n\n          <div className=\"flex gap-2\">\n            {hasTenOfDiamonds && (\n              <span className=\"bg-red-600 text-white px-2 py-1 rounded-full text-sm\">\n                10♦\n              </span>\n            )}\n            {hasTwoOfClubs && (\n              <span className=\"bg-green-600 text-white px-2 py-1 rounded-full text-sm\">\n                2♣\n              </span>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default CapturedCards;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport Card from './Card';\nimport { Card as CardType } from '../types/game';\n\ninterface CardAnimationProps {\n  card: CardType;\n  onComplete: () => void;\n}\n\nconst CardAnimation: React.FC<CardAnimationProps> = ({ card, onComplete }) => {\n  return (\n    <motion.div\n      className=\"fixed top-[15%] right-[15%] z-50\"\n      initial={{ \n        x: 0,\n        y: 0,\n        rotate: 15,\n        scale: 0.8,\n        opacity: 0\n      }}\n      animate={{ \n        x: -200,\n        y: 200,\n        rotate: 0,\n        scale: 1,\n        opacity: 1\n      }}\n      transition={{ \n        duration: 0.5,\n        ease: [0.16, 1, 0.3, 1], // Custom bezier curve pour un effet plus dynamique\n        opacity: { duration: 0.2 }\n      }}\n      onAnimationComplete={onComplete}\n    >\n      <motion.div\n        initial={{ boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\" }}\n        animate={{ \n          boxShadow: \"0 20px 25px rgba(0, 0, 0, 0.15)\",\n          y: [0, -10, 0]\n        }}\n        transition={{\n          boxShadow: { duration: 0.2 },\n          y: { duration: 0.5, ease: \"easeOut\" }\n        }}\n      >\n        <Card card={card} isSelectable={false} />\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default CardAnimation;","import React, { useState } from 'react';\nimport { Card as CardType } from '../types/game';\nimport { motion } from 'framer-motion';\nimport Card from './Card';\nimport { ArrowDown } from 'lucide-react';\nimport CardAnimation from './CardAnimation';\n\ninterface ComputerMoveIndicatorProps {\n  selectedCard: CardType;\n  capturedCards: CardType[];\n}\n\nconst ComputerMoveIndicator: React.FC<ComputerMoveIndicatorProps> = ({\n  selectedCard,\n  capturedCards\n}) => {\n  const [showAnimation, setShowAnimation] = useState(true);\n  const [showCapture, setShowCapture] = useState(false);\n\n  const handleAnimationComplete = () => {\n    setShowAnimation(false);\n    if (capturedCards.length > 0) {\n      setShowCapture(true);\n    }\n  };\n\n  if (showAnimation) {\n    return <CardAnimation card={selectedCard} onComplete={handleAnimationComplete} />;\n  }\n\n  if (capturedCards.length === 0) {\n    return (\n      <motion.div\n        className=\"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-blue-600/80 backdrop-blur-sm \n          text-white px-6 py-3 rounded-full shadow-lg flex items-center gap-2\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: 20 }}\n      >\n        <ArrowDown className=\"w-5 h-5\" />\n        <span>L'ordinateur dépose une carte</span>\n      </motion.div>\n    );\n  }\n\n  if (showCapture) {\n    return (\n      <motion.div\n        className=\"fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        <motion.div\n          className=\"bg-white/10 p-8 rounded-2xl\"\n          initial={{ scale: 0.8, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          transition={{ delay: 0.2 }}\n        >\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-white text-2xl font-bold mb-2\">Capture!</h3>\n            <p className=\"text-yellow-400\">\n              L'ordinateur capture {capturedCards.length} carte{capturedCards.length > 1 ? 's' : ''}\n            </p>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 justify-center\">\n            <div>\n              <p className=\"text-white text-center mb-2\">Avec:</p>\n              <Card card={selectedCard} isSelectable={false} />\n            </div>\n\n            <div>\n              <p className=\"text-white text-center mb-2\">Cartes capturées:</p>\n              <div className=\"flex gap-2\">\n                {capturedCards.map((card, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: 0.3 + index * 0.1 }}\n                  >\n                    <Card card={card} isSelectable={false} />\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    );\n  }\n\n  return null;\n};\n\nexport default ComputerMoveIndicator;","import React from 'react';\nimport { Player } from '../types/game';\nimport { motion } from 'framer-motion';\nimport { Trophy, Club, Diamond, Library } from 'lucide-react';\n\ninterface GameOverModalProps {\n  players: Player[];\n  matchWinner: number | null;\n  onNewGame: () => void;\n  onNewMatch: () => void;\n}\n\nconst GameOverModal: React.FC<GameOverModalProps> = ({\n  players,\n  matchWinner,\n  onNewGame,\n  onNewMatch\n}) => {\n  const getPlayerStats = (player: Player, otherPlayer: Player) => {\n    const tenOfDiamonds = player.capturedCards.some(\n      card => card.rank === '10' && card.suit === 'diamonds'\n    );\n    const twoOfClubs = player.capturedCards.some(\n      card => card.rank === '2' && card.suit === 'clubs'\n    );\n    const clubsCount = player.capturedCards.filter(card => card.suit === 'clubs').length;\n    const otherClubsCount = otherPlayer.capturedCards.filter(card => card.suit === 'clubs').length;\n    const cardsCount = player.capturedCards.length;\n    const otherCardsCount = otherPlayer.capturedCards.length;\n\n    return {\n      tenOfDiamonds,\n      twoOfClubs,\n      clubsCount,\n      mostClubs: clubsCount > otherClubsCount,\n      equalClubs: clubsCount === otherClubsCount,\n      mostCards: cardsCount > otherCardsCount,\n      equalCards: cardsCount === otherCardsCount,\n      totalCards: cardsCount\n    };\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4\">\n      <motion.div \n        className=\"bg-white rounded-xl shadow-2xl max-w-md w-full p-4 sm:p-6 md:p-8\"\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.3 }}\n      >\n        <h2 className=\"text-xl sm:text-2xl font-bold text-center mb-4 sm:mb-6\">\n          {matchWinner ? (\n            <div className=\"flex items-center justify-center gap-2\">\n              <Trophy className=\"w-5 h-5 sm:w-6 sm:h-6 text-yellow-400\" />\n              <span>{players[matchWinner - 1].name} gagne le match!</span>\n            </div>\n          ) : (\n            \"Fin de la partie\"\n          )}\n        </h2>\n\n        <div className=\"space-y-4 sm:space-y-6 mb-4 sm:mb-6\">\n          {players.map((player, index) => {\n            const stats = getPlayerStats(player, players[1-index]);\n            return (\n              <div key={player.id} className=\"bg-gray-100 rounded-lg p-3 sm:p-4\">\n                <h3 className=\"font-bold text-base sm:text-lg mb-2\">{player.name}</h3>\n                <div className=\"space-y-2 text-sm sm:text-base\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Diamond className=\"w-4 h-4\" />\n                      <span>10♦</span>\n                    </div>\n                    <span className={stats.tenOfDiamonds ? \"text-green-600\" : \"text-gray-500\"}>\n                      {stats.tenOfDiamonds ? \"+1 point\" : \"0 point\"}\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Club className=\"w-4 h-4\" />\n                      <span>2♣</span>\n                    </div>\n                    <span className={stats.twoOfClubs ? \"text-green-600\" : \"text-gray-500\"}>\n                      {stats.twoOfClubs ? \"+1 point\" : \"0 point\"}\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Club className=\"w-4 h-4\" />\n                      <span>Trèfles ({stats.clubsCount})</span>\n                    </div>\n                    <span className={stats.mostClubs || stats.equalClubs ? \"text-green-600\" : \"text-gray-500\"}>\n                      {stats.mostClubs ? \"+1 point\" : stats.equalClubs ? \"+0.5 point\" : \"0 point\"}\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Library className=\"w-4 h-4\" />\n                      <span>Cartes ({stats.totalCards})</span>\n                    </div>\n                    <span className={stats.mostCards || stats.equalCards ? \"text-green-600\" : \"text-gray-500\"}>\n                      {stats.mostCards ? \"+2 points\" : stats.equalCards ? \"+1 point\" : \"0 point\"}\n                    </span>\n                  </div>\n\n                  <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                    <div className=\"flex justify-between font-bold\">\n                      <span>Total cette partie:</span>\n                      <span className=\"text-blue-600\">+{player.score} points</span>\n                    </div>\n                    <div className=\"flex justify-between font-bold text-lg\">\n                      <span>Score total:</span>\n                      <span className=\"text-blue-600\">{player.matchPoints} points</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        <button\n          onClick={matchWinner ? onNewMatch : onNewGame}\n          className=\"w-full bg-blue-600 text-white px-4 py-2 sm:py-3 rounded-lg hover:bg-blue-700 \n            transition-colors font-semibold flex items-center justify-center gap-2\"\n        >\n          <Trophy className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n          {matchWinner ? \"Nouveau Match\" : \"Nouvelle Partie\"}\n        </button>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default GameOverModal;","import { Card, Suit, Rank, GameState } from '../types/game';\n\nconst SUITS: Suit[] = ['hearts', 'diamonds', 'clubs', 'spades'];\nconst RANKS: Rank[] = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n\nexport const createDeck = (): Card[] => {\n  const deck: Card[] = [];\n  \n  SUITS.forEach(suit => {\n    RANKS.forEach(rank => {\n      deck.push({\n        suit,\n        rank,\n        value: getValue(rank)\n      });\n    });\n  });\n  \n  return shuffleDeck(deck);\n};\n\nconst getValue = (rank: Rank): number => {\n  if (rank === 'A') return 1;\n  if (rank === 'J' || rank === 'Q' || rank === 'K') return 0;\n  return parseInt(rank);\n};\n\nexport const shuffleDeck = (deck: Card[]): Card[] => {\n  const newDeck = [...deck];\n  for (let i = newDeck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newDeck[i], newDeck[j]] = [newDeck[j], newDeck[i]];\n  }\n  return newDeck;\n};\n\nexport const handleInitialTableCards = (deck: Card[]): { tableCards: Card[], updatedDeck: Card[] } => {\n  let tableCards: Card[] = [];\n  let updatedDeck = [...deck];\n  let jackCards: Card[] = [];\n  \n  // Distribuer 4 cartes sur la table\n  for (let i = 0; i < 4; i++) {\n    const card = updatedDeck.shift();\n    if (!card) break;\n    \n    if (card.rank === 'J') {\n      jackCards.push(card);\n    } else {\n      tableCards.push(card);\n    }\n  }\n  \n  // Si des Valets ont été trouvés, les remettre dans le paquet\n  if (jackCards.length > 0) {\n    updatedDeck = [...updatedDeck, ...jackCards];\n    \n    // Compléter la table avec de nouvelles cartes\n    while (tableCards.length < 4 && updatedDeck.length > 0) {\n      const card = updatedDeck.shift();\n      if (!card) break;\n      \n      if (card.rank === 'J') {\n        updatedDeck.push(card);\n      } else {\n        tableCards.push(card);\n      }\n    }\n  }\n  \n  return { tableCards, updatedDeck };\n};\n\n// Fonction pour vérifier le nombre total de cartes dans le jeu\nexport const verifyCardCount = (gameState: GameState): boolean => {\n  const deckCount = gameState.deck.length;\n  const tableCount = gameState.tableCards.length;\n  const player1Cards = gameState.players[0].cards.length + gameState.players[0].capturedCards.length;\n  const player2Cards = gameState.players[1].cards.length + gameState.players[1].capturedCards.length;\n  \n  const totalCards = deckCount + tableCount + player1Cards + player2Cards;\n  \n  if (totalCards !== 52) {\n    console.warn(`Erreur de comptage des cartes: ${totalCards}/52 cartes trouvées`);\n    console.warn(`Deck: ${deckCount}, Table: ${tableCount}, Joueur 1: ${player1Cards}, Joueur 2: ${player2Cards}`);\n    return false;\n  }\n  \n  return true;\n};","import { Card } from '../types/game';\n\nexport const calculateFinalPoints = (\n  playerCards: Card[],\n  otherPlayerCards: Card[]\n): { score: number } => {\n  let points = 0;\n\n  // Points pour le 10 de carreaux (1 point)\n  if (playerCards.some(card => card.rank === '10' && card.suit === 'diamonds')) {\n    points += 1;\n  }\n\n  // Points pour le 2 de trèfles (1 point)\n  if (playerCards.some(card => card.rank === '2' && card.suit === 'clubs')) {\n    points += 1;\n  }\n\n  // Points pour le plus de trèfles (1 point)\n  const playerClubs = playerCards.filter(card => card.suit === 'clubs').length;\n  const otherPlayerClubs = otherPlayerCards.filter(card => card.suit === 'clubs').length;\n\n  if (playerClubs > otherPlayerClubs) {\n    points += 1;\n  } else if (playerClubs === otherPlayerClubs) {\n    points += 0.5;\n  }\n\n  // Points pour le plus de cartes (2 points)\n  if (playerCards.length > otherPlayerCards.length) {\n    points += 2;\n  } else if (playerCards.length === otherPlayerCards.length) {\n    points += 1;\n  }\n\n  return { score: points };\n};","import { Card } from '../types/game';\n\nexport const createCardKey = (card: Card): string => {\n  return `${card.suit}-${card.rank}`;\n};\n\nexport const removeDuplicateCards = (cards: Card[]): Card[] => {\n  const uniqueCards = new Map<string, Card>();\n  \n  cards.forEach(card => {\n    const key = createCardKey(card);\n    if (!uniqueCards.has(key)) {\n      uniqueCards.set(key, card);\n    }\n  });\n  \n  return Array.from(uniqueCards.values());\n};\n\nexport const validateUniqueCards = (cards: Card[]): void => {\n  const cardMap = new Map<string, number>();\n  \n  cards.forEach(card => {\n    const key = createCardKey(card);\n    cardMap.set(key, (cardMap.get(key) || 0) + 1);\n  });\n  \n  cardMap.forEach((count, key) => {\n    if (count > 1) {\n      throw new Error(`Duplicate card found: ${key}`);\n    }\n  });\n};","import { Card, GameState, Player } from '../types/game';\nimport { calculateFinalPoints } from './scoring';\nimport { removeDuplicateCards } from './cardManagement';\n\nexport const handleEndGame = (\n  state: GameState,\n  playerIndex: number,\n  selectedCard: Card,\n  capturedCards: Card[],\n  remainingTableCards: Card[],\n  lastCapturingPlayer: number | null\n): GameState => {\n  // Le dernier joueur qui capture prend les cartes restantes\n  const finalCapturer = capturedCards.length > 0 \n    ? playerIndex \n    : lastCapturingPlayer !== null \n      ? lastCapturingPlayer - 1 \n      : playerIndex;\n\n  // Préparer les cartes finales pour chaque joueur\n  let player1FinalCards = [...state.players[0].capturedCards];\n  let player2FinalCards = [...state.players[1].capturedCards];\n\n  // Ajouter la dernière carte jouée et les cartes capturées au bon joueur\n  if (finalCapturer === 0) {\n    player1FinalCards = removeDuplicateCards([\n      ...player1FinalCards,\n      selectedCard,\n      ...capturedCards,\n      ...remainingTableCards\n    ]);\n  } else {\n    player2FinalCards = removeDuplicateCards([\n      ...player2FinalCards,\n      selectedCard,\n      ...capturedCards,\n      ...remainingTableCards\n    ]);\n  }\n\n  // Calculer les scores finaux\n  const { score: player1Score } = calculateFinalPoints(player1FinalCards, player2FinalCards);\n  const { score: player2Score } = calculateFinalPoints(player2FinalCards, player1FinalCards);\n\n  const newMatchPoints = [\n    state.players[0].matchPoints + player1Score,\n    state.players[1].matchPoints + player2Score\n  ];\n\n  return {\n    ...state,\n    tableCards: [],\n    players: [\n      {\n        ...state.players[0],\n        cards: [],\n        capturedCards: player1FinalCards,\n        score: player1Score,\n        matchPoints: newMatchPoints[0]\n      },\n      {\n        ...state.players[1],\n        cards: [],\n        capturedCards: player2FinalCards,\n        score: player2Score,\n        matchPoints: newMatchPoints[1]\n      }\n    ],\n    isGameOver: true,\n    matchWinner: newMatchPoints[0] >= 11 ? 1 : newMatchPoints[1] >= 11 ? 2 : null\n  };\n};","import { useState, useCallback } from 'react';\nimport { GameState, Card } from '../types/game';\nimport { createDeck, handleInitialTableCards } from '../utils/deck';\nimport { handleEndGame } from '../utils/endGame';\nimport { removeDuplicateCards } from '../utils/cardManagement';\n\nexport function useGameState(isComputerOpponent: boolean) {\n  const [lastStartingPlayer, setLastStartingPlayer] = useState<number | null>(null);\n  const [lastCapturingPlayer, setLastCapturingPlayer] = useState<number | null>(null);\n  \n  const [state, setState] = useState<GameState>({\n    deck: [],\n    players: [\n      { id: 1, cards: [], capturedCards: [], score: 0, name: \"Player 1\", matchPoints: 0 },\n      { \n        id: 2, \n        cards: [], \n        capturedCards: [], \n        score: 0, \n        name: isComputerOpponent ? \"Ordinateur\" : \"Player 2\", \n        matchPoints: 0 \n      }\n    ],\n    tableCards: [],\n    currentPlayer: 1,\n    isGameOver: false,\n    jackOnTable: false,\n    selectedCards: [],\n    selectedPlayerCard: null,\n    discardPile: [],\n    matchWinner: null\n  });\n\n  const initializeGame = useCallback(() => {\n    const initialDeck = createDeck();\n    const player1Cards = initialDeck.splice(0, 4);\n    const player2Cards = initialDeck.splice(0, 4);\n    \n    const { tableCards, updatedDeck } = handleInitialTableCards(initialDeck);\n\n    const startingPlayer = lastStartingPlayer === null ? 1 : (lastStartingPlayer === 1 ? 2 : 1);\n    setLastStartingPlayer(startingPlayer);\n    setLastCapturingPlayer(null);\n\n    setState(prev => ({\n      ...prev,\n      deck: updatedDeck,\n      players: [\n        { ...prev.players[0], cards: player1Cards, capturedCards: [], score: 0 },\n        { ...prev.players[1], cards: player2Cards, capturedCards: [], score: 0 }\n      ],\n      tableCards,\n      currentPlayer: startingPlayer,\n      isGameOver: false,\n      matchWinner: null\n    }));\n  }, [lastStartingPlayer]);\n\n  const startNewMatch = useCallback(() => {\n    setLastStartingPlayer(null);\n    setState(prev => ({\n      ...prev,\n      players: prev.players.map(player => ({\n        ...player,\n        cards: [],\n        capturedCards: [],\n        score: 0,\n        matchPoints: 0\n      })),\n      deck: [],\n      tableCards: [],\n      isGameOver: false,\n      matchWinner: null\n    }));\n    setTimeout(initializeGame, 0);\n  }, [initializeGame]);\n\n  const playMove = useCallback((selectedCard: Card, capturedCards: Card[]) => {\n    setState(prev => {\n      const playerIndex = prev.currentPlayer - 1;\n      const otherPlayerIndex = 1 - playerIndex;\n\n      // Remove played card from hand\n      const newPlayerCards = prev.players[playerIndex].cards.filter(\n        card => card.suit !== selectedCard.suit || card.rank !== selectedCard.rank\n      );\n\n      // Update captured cards\n      let newCapturedCards = [...prev.players[playerIndex].capturedCards];\n      if (capturedCards.length > 0) {\n        newCapturedCards = removeDuplicateCards([\n          ...newCapturedCards,\n          selectedCard,\n          ...capturedCards\n        ]);\n        setLastCapturingPlayer(prev.currentPlayer);\n      }\n\n      // Update table cards\n      const newTableCards = capturedCards.length > 0\n        ? prev.tableCards.filter(card => \n            !capturedCards.some(captured => \n              captured.suit === card.suit && captured.rank === card.rank\n            )\n          )\n        : [...prev.tableCards, selectedCard];\n\n      // Check if round is over\n      const needsNewCards = prev.deck.length < 8;\n      const isRoundOver = newPlayerCards.length === 0 && \n                         prev.players[otherPlayerIndex].cards.length === 0;\n\n      if (needsNewCards && isRoundOver) {\n        return handleEndGame(\n          prev,\n          playerIndex,\n          selectedCard,\n          capturedCards,\n          newTableCards,\n          lastCapturingPlayer\n        );\n      }\n\n      // Deal new cards if needed\n      if (isRoundOver && prev.deck.length >= 8) {\n        const newDeck = [...prev.deck];\n        const newPlayer1Cards = newDeck.splice(0, 4);\n        const newPlayer2Cards = newDeck.splice(0, 4);\n\n        return {\n          ...prev,\n          deck: newDeck,\n          players: [\n            {\n              ...prev.players[0],\n              cards: playerIndex === 0 ? newPlayer1Cards : newPlayer1Cards,\n              capturedCards: playerIndex === 0 ? newCapturedCards : prev.players[0].capturedCards\n            },\n            {\n              ...prev.players[1],\n              cards: playerIndex === 1 ? newPlayer2Cards : newPlayer2Cards,\n              capturedCards: playerIndex === 1 ? newCapturedCards : prev.players[1].capturedCards\n            }\n          ],\n          tableCards: newTableCards,\n          currentPlayer: prev.currentPlayer === 1 ? 2 : 1\n        };\n      }\n\n      // Normal update\n      return {\n        ...prev,\n        tableCards: newTableCards,\n        players: [\n          {\n            ...prev.players[0],\n            cards: playerIndex === 0 ? newPlayerCards : prev.players[0].cards,\n            capturedCards: playerIndex === 0 ? newCapturedCards : prev.players[0].capturedCards\n          },\n          {\n            ...prev.players[1],\n            cards: playerIndex === 1 ? newPlayerCards : prev.players[1].cards,\n            capturedCards: playerIndex === 1 ? newCapturedCards : prev.players[1].capturedCards\n          }\n        ],\n        currentPlayer: prev.currentPlayer === 1 ? 2 : 1\n      };\n    });\n  }, [lastCapturingPlayer]);\n\n  return {\n    gameState: state,\n    playMove,\n    initializeGame,\n    startNewMatch\n  };\n}","import { Card } from '../types/game';\n\nexport const calculateSum = (cards: Card[]): number => {\n  return cards.reduce((sum, card) => {\n    if (card.rank === 'A') return sum + 1;\n    if (card.rank === 'J' || card.rank === 'Q' || card.rank === 'K') return sum;\n    return sum + parseInt(card.rank);\n  }, 0);\n};\n\nexport const canCaptureSameRank = (playerCard: Card, tableCard: Card): boolean => {\n  if (playerCard.rank === 'Q' && tableCard.rank === 'Q') return true;\n  if (playerCard.rank === 'K' && tableCard.rank === 'K') return true;\n  return false;\n};\n\nexport const findAllCombinations = (playerCard: Card, tableCards: Card[]): Card[][] => {\n  const combinations: Card[][] = [];\n\n  // Cas spécial pour les Dames et Rois - uniquement capture de même rang\n  if (playerCard.rank === 'Q' || playerCard.rank === 'K') {\n    const sameRankCards = tableCards.filter(card => card.rank === playerCard.rank);\n    if (sameRankCards.length > 0) {\n      combinations.push([sameRankCards[0]]);\n    }\n    return combinations;\n  }\n\n  // Le Valet ne capture pas directement\n  if (playerCard.rank === 'J') {\n    return combinations;\n  }\n\n  // Pour les cartes numériques et l'As\n  const validCards = tableCards.filter(card => \n    !['K', 'Q', 'J'].includes(card.rank)\n  );\n\n  const findCombinationsSum11 = (cards: Card[], start: number, current: Card[]) => {\n    const sum = calculateSum([playerCard, ...current]);\n    \n    if (sum === 11) {\n      combinations.push([...current]);\n      return;\n    }\n    \n    if (sum > 11) return;\n    \n    for (let i = start; i < cards.length; i++) {\n      current.push(cards[i]);\n      findCombinationsSum11(cards, i + 1, current);\n      current.pop();\n    }\n  };\n\n  findCombinationsSum11(validCards, 0, []);\n  return combinations;\n};\n\nexport const isJackMove = (card: Card): boolean => {\n  return card.rank === 'J';\n};\n\nexport const getValidJackTargets = (tableCards: Card[]): Card[] => {\n  return tableCards.filter(card => card.rank !== 'K' && card.rank !== 'Q');\n};\n\nexport const canAddCardToSelection = (\n  selectedCard: Card,\n  selectedTableCards: Card[],\n  newCard: Card\n): boolean => {\n  // Pour les Dames et Rois - une seule capture possible\n  if (selectedCard.rank === 'Q' || selectedCard.rank === 'K') {\n    if (selectedTableCards.length > 0) return false;\n    return selectedCard.rank === newCard.rank;\n  }\n\n  // Pour le Valet\n  if (isJackMove(selectedCard)) {\n    return newCard.rank !== 'K' && newCard.rank !== 'Q';\n  }\n\n  // Pour les cartes numériques et l'As\n  if (newCard.rank === 'K' || newCard.rank === 'Q' || newCard.rank === 'J') {\n    return false;\n  }\n\n  const currentSum = calculateSum([selectedCard, ...selectedTableCards]);\n  const newSum = currentSum + calculateSum([newCard]);\n  return newSum <= 11;\n};","import { useState, useCallback } from 'react';\nimport { Card } from '../types/game';\nimport { \n  findAllCombinations, \n  isJackMove, \n  getValidJackTargets,\n  canAddCardToSelection,\n  calculateSum\n} from '../utils/gameLogic';\n\nexport const useCardSelection = (\n  onPlayMove: (card: Card, capturedCards: Card[]) => void,\n  tableCards: Card[]\n) => {\n  const [selectedCard, setSelectedCard] = useState<Card | null>(null);\n  const [selectedTableCards, setSelectedTableCards] = useState<Card[]>([]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedCard(null);\n    setSelectedTableCards([]);\n  }, []);\n\n  const handleCardSelect = useCallback((card: Card) => {\n    if (selectedCard === card) {\n      clearSelection();\n      return;\n    }\n    setSelectedCard(card);\n    setSelectedTableCards([]);\n  }, [selectedCard, clearSelection]);\n\n  const handleTableCardSelect = useCallback((tableCard: Card) => {\n    if (!selectedCard) return;\n\n    // Si la carte est déjà sélectionnée, on la retire\n    if (selectedTableCards.includes(tableCard)) {\n      setSelectedTableCards(prev => prev.filter(card => card !== tableCard));\n      return;\n    }\n\n    // Vérifier si la carte peut être ajoutée à la sélection\n    if (canAddCardToSelection(selectedCard, selectedTableCards, tableCard)) {\n      setSelectedTableCards(prev => [...prev, tableCard]);\n    }\n  }, [selectedCard, selectedTableCards]);\n\n  const handlePlaceCard = useCallback(() => {\n    if (!selectedCard) return;\n\n    // Vérifier si la sélection est valide\n    if (selectedTableCards.length > 0) {\n      // Pour les Rois et les Dames - une seule capture à la fois\n      if (selectedCard.rank === 'K' || selectedCard.rank === 'Q') {\n        if (selectedTableCards.length !== 1 || selectedCard.rank !== selectedTableCards[0].rank) {\n          return;\n        }\n      }\n      // Pour le Valet\n      else if (isJackMove(selectedCard)) {\n        const validTargets = getValidJackTargets(tableCards);\n        if (!selectedTableCards.every(card => validTargets.includes(card))) {\n          return;\n        }\n      }\n      // Pour l'As et les cartes numériques - vérifier la somme de 11\n      else {\n        const sum = calculateSum([selectedCard, ...selectedTableCards]);\n        if (sum !== 11) {\n          return;\n        }\n      }\n    }\n\n    onPlayMove(selectedCard, selectedTableCards);\n    clearSelection();\n  }, [selectedCard, selectedTableCards, tableCards, onPlayMove, clearSelection]);\n\n  return {\n    selectedCard,\n    selectedTableCards,\n    handleCardSelect,\n    handleTableCardSelect,\n    handlePlaceCard,\n    clearSelection\n  };\n};","import { GameState, Card, ComputerMove } from '../types/game';\nimport { findAllCombinations, isJackMove, getValidJackTargets, canAceCaptureTenOfDiamonds } from './gameLogic';\n\nconst evaluateMove = (capturedCards: Card[]): number => {\n  let score = capturedCards.length;\n\n  // Bonus pour les cartes spéciales\n  if (capturedCards.some(card => card.rank === '10' && card.suit === 'diamonds')) {\n    score += 10;\n  }\n  if (capturedCards.some(card => card.rank === '2' && card.suit === 'clubs')) {\n    score += 5;\n  }\n\n  // Bonus pour les trèfles\n  score += capturedCards.filter(card => card.suit === 'clubs').length * 3;\n\n  return score;\n};\n\nexport const findBestMove = (gameState: GameState): ComputerMove | null => {\n  const computerCards = gameState.players[1].cards;\n  \n  if (computerCards.length === 0) {\n    return null;\n  }\n\n  let bestMove: ComputerMove | null = null;\n  let bestScore = -1;\n\n  // Priorité au 10 de carreaux avec un As\n  const tenOfDiamonds = gameState.tableCards.find(\n    card => card.rank === '10' && card.suit === 'diamonds'\n  );\n  if (tenOfDiamonds) {\n    const ace = computerCards.find(card => card.rank === 'A');\n    if (ace) {\n      return { card: ace, capturedCards: [tenOfDiamonds] };\n    }\n  }\n\n  for (const card of computerCards) {\n    if (isJackMove(card)) {\n      const validTargets = getValidJackTargets(gameState.tableCards);\n      if (validTargets.length > 0) {\n        const score = evaluateMove(validTargets);\n        if (score > bestScore) {\n          bestScore = score;\n          bestMove = { card, capturedCards: validTargets };\n        }\n      }\n      continue;\n    }\n\n    const combinations = findAllCombinations(card, gameState.tableCards);\n    for (const combination of combinations) {\n      const score = evaluateMove(combination);\n      if (score > bestScore) {\n        bestScore = score;\n        bestMove = { card, capturedCards: combination };\n      }\n    }\n  }\n\n  if (!bestMove) {\n    const card = findBestCardToPlay(computerCards);\n    return { card, capturedCards: [] };\n  }\n\n  return bestMove;\n};\n\nconst findBestCardToPlay = (cards: Card[]): Card => {\n  // Éviter de jouer les trèfles si possible\n  const nonClubCards = cards.filter(card => card.suit !== 'clubs');\n  if (nonClubCards.length > 0) {\n    return nonClubCards[0];\n  }\n  return cards[0];\n};","import { useState, useEffect } from 'react';\nimport { GameState, Card, ComputerMove } from '../types/game';\nimport { findBestMove } from '../utils/computerPlayer';\n\nexport const useComputerPlayer = (\n  isComputerOpponent: boolean,\n  gameState: GameState,\n  onPlayMove: (card: Card, capturedCards: Card[]) => void\n) => {\n  const [computerMove, setComputerMove] = useState<ComputerMove | null>(null);\n  const [isComputerThinking, setIsComputerThinking] = useState(false);\n\n  useEffect(() => {\n    if (!isComputerOpponent || gameState.currentPlayer !== 2 || gameState.isGameOver) {\n      return;\n    }\n\n    let isActive = true;\n    setIsComputerThinking(true);\n\n    const timer = setTimeout(() => {\n      if (!isActive) return;\n\n      const bestMove = findBestMove(gameState);\n      \n      if (isActive && bestMove) {\n        setComputerMove(bestMove);\n        \n        const playTimer = setTimeout(() => {\n          if (isActive) {\n            onPlayMove(bestMove.card, bestMove.capturedCards);\n            setComputerMove(null);\n            setIsComputerThinking(false);\n          }\n        }, 1500);\n\n        return () => clearTimeout(playTimer);\n      }\n    }, 1000);\n\n    return () => {\n      isActive = false;\n      clearTimeout(timer);\n      setIsComputerThinking(false);\n    };\n  }, [gameState.currentPlayer, isComputerOpponent, gameState.isGameOver, gameState.tableCards, gameState.players]);\n\n  return {\n    computerMove,\n    isComputerThinking\n  };\n};","import React, { useEffect } from 'react';\nimport { Card as CardType } from '../types/game';\nimport PlayerHand from './PlayerHand';\nimport TableCards from './TableCards';\nimport TurnIndicator from './TurnIndicator';\nimport CapturedCards from './CapturedCards';\nimport ComputerMoveIndicator from './ComputerMoveIndicator';\nimport GameOverModal from './GameOverModal';\nimport { useGameState } from '../hooks/useGameState';\nimport { useCardSelection } from '../hooks/useCardSelection';\nimport { useComputerPlayer } from '../hooks/useComputerPlayer';\n\ninterface GameBoardProps {\n  isComputerOpponent?: boolean;\n  gameId?: string;\n  playerNumber?: number;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({ \n  isComputerOpponent = false,\n  gameId,\n  playerNumber \n}) => {\n  const {\n    gameState,\n    playMove,\n    initializeGame,\n    startNewMatch\n  } = useGameState(isComputerOpponent);\n\n  const {\n    selectedCard,\n    selectedTableCards,\n    handleCardSelect,\n    handleTableCardSelect,\n    handlePlaceCard,\n    clearSelection\n  } = useCardSelection(playMove, gameState.tableCards);\n\n  const {\n    computerMove,\n    isComputerThinking\n  } = useComputerPlayer(isComputerOpponent, gameState, playMove);\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  const handleCardClick = (card: CardType, playerNum: number) => {\n    if (gameState.currentPlayer !== playerNum || isComputerThinking) return;\n    if (isComputerOpponent && playerNum === 2) return;\n    handleCardSelect(card);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-green-800 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <TurnIndicator \n          currentPlayer={gameState.currentPlayer}\n          isComputerThinking={isComputerThinking}\n          deckCount={gameState.deck.length}\n          tableCardsCount={gameState.tableCards.length}\n        />\n\n        <PlayerHand\n          cards={gameState.players[1].cards}\n          isOpponent={isComputerOpponent}\n          selectedCard={gameState.currentPlayer === 2 ? selectedCard : null}\n          onCardClick={(card) => handleCardClick(card, 2)}\n          isCurrentPlayer={gameState.currentPlayer === 2}\n          playerName={`${gameState.players[1].name} (${gameState.players[1].matchPoints} pts)`}\n          score={gameState.players[1].score}\n        />\n\n        <CapturedCards\n          cards={gameState.players[1].capturedCards}\n          playerName={gameState.players[1].name}\n        />\n\n        <TableCards\n          cards={gameState.tableCards}\n          selectedCards={selectedTableCards}\n          onCardClick={handleTableCardSelect}\n          isSelectable={!!selectedCard && !isComputerThinking}\n        />\n\n        <CapturedCards\n          cards={gameState.players[0].capturedCards}\n          playerName={gameState.players[0].name}\n        />\n\n        <PlayerHand\n          cards={gameState.players[0].cards}\n          isOpponent={false}\n          selectedCard={gameState.currentPlayer === 1 ? selectedCard : null}\n          onCardClick={(card) => handleCardClick(card, 1)}\n          isCurrentPlayer={gameState.currentPlayer === 1}\n          playerName={`${gameState.players[0].name} (${gameState.players[0].matchPoints} pts)`}\n          score={gameState.players[0].score}\n        />\n\n        {selectedCard && !isComputerThinking && (\n          <div className=\"fixed bottom-4 right-4\">\n            <button\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-blue-700 transition-colors\"\n              onClick={handlePlaceCard}\n            >\n              {selectedTableCards.length > 0 ? \"Confirmer la capture\" : \"Déposer sur le tapis\"}\n            </button>\n          </div>\n        )}\n\n        {computerMove && (\n          <ComputerMoveIndicator\n            selectedCard={computerMove.card}\n            capturedCards={computerMove.capturedCards}\n          />\n        )}\n\n        {gameState.isGameOver && (\n          <GameOverModal\n            players={gameState.players}\n            matchWinner={gameState.matchWinner}\n            onNewGame={initializeGame}\n            onNewMatch={startNewMatch}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameBoard;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Bot, Users } from 'lucide-react';\n\ninterface GameModeSelectorProps {\n  onSelectMode: (mode: 'computer' | 'multiplayer') => void;\n}\n\nconst GameModeSelector: React.FC<GameModeSelectorProps> = ({ onSelectMode }) => {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-600 to-blue-800 flex items-center justify-center p-4\">\n      <motion.div \n        className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Game of 11</h1>\n          <p className=\"text-gray-600\">Choisissez votre mode de jeu</p>\n        </div>\n\n        <div className=\"space-y-4\">\n          <motion.button\n            className=\"w-full bg-blue-600 text-white rounded-lg py-4 px-6 flex items-center gap-3\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => onSelectMode('computer')}\n          >\n            <Bot className=\"w-6 h-6\" />\n            <span className=\"flex-1 text-left\">Jouer contre l'ordinateur</span>\n          </motion.button>\n\n          <motion.button\n            className=\"w-full bg-green-600 text-white rounded-lg py-4 px-6 flex items-center gap-3\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => onSelectMode('multiplayer')}\n          >\n            <Users className=\"w-6 h-6\" />\n            <span className=\"flex-1 text-left\">Jouer à deux</span>\n          </motion.button>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default GameModeSelector;","export const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';\nexport const SOCKET_URL = import.meta.env.VITE_SOCKET_URL || 'ws://localhost:3000';","import { io, Socket } from 'socket.io-client';\nimport { Card, GameState } from '../types/game';\nimport { API_URL } from '../config';\n\nclass SocketService {\n  private socket: Socket | null = null;\n  private gameId: string | null = null;\n\n  connect(gameId: string, playerNumber: number) {\n    this.socket = io(API_URL, {\n      query: {\n        gameId,\n        playerNumber\n      }\n    });\n    this.gameId = gameId;\n\n    this.socket.on('connect', () => {\n      console.log('Connected to game server');\n    });\n\n    return this.socket;\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.gameId = null;\n    }\n  }\n\n  playCard(card: Card, capturedCards: Card[]) {\n    if (this.socket) {\n      this.socket.emit('play_card', {\n        gameId: this.gameId,\n        card,\n        capturedCards\n      });\n    }\n  }\n\n  onGameStateUpdate(callback: (gameState: GameState) => void) {\n    if (this.socket) {\n      this.socket.on('game_state_update', callback);\n    }\n  }\n\n  onPlayerJoined(callback: (playerNumber: number) => void) {\n    if (this.socket) {\n      this.socket.on('player_joined', callback);\n    }\n  }\n\n  onPlayerLeft(callback: () => void) {\n    if (this.socket) {\n      this.socket.on('player_left', callback);\n    }\n  }\n}\n\nexport const socketService = new SocketService();","import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Copy, Loader } from 'lucide-react';\nimport { socketService } from '../services/socketService';\n\ninterface WaitingRoomProps {\n  gameId: string;\n  onCancel: () => void;\n  onStart: () => void;\n}\n\nconst WaitingRoom: React.FC<WaitingRoomProps> = ({ gameId, onCancel, onStart }) => {\n  const [copied, setCopied] = React.useState(false);\n\n  useEffect(() => {\n    const socket = socketService.connect(gameId, 1);\n\n    socket.on('player_joined', () => {\n      onStart();\n    });\n\n    return () => {\n      socketService.disconnect();\n    };\n  }, [gameId, onStart]);\n\n  const copyGameId = () => {\n    navigator.clipboard.writeText(gameId);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4\">\n      <motion.div\n        className=\"bg-white rounded-xl shadow-2xl p-8 max-w-md w-full\"\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n      >\n        <div className=\"flex items-center justify-center mb-6\">\n          <Loader className=\"w-6 h-6 text-blue-600 animate-spin mr-3\" />\n          <h2 className=\"text-2xl font-bold\">En attente d'un autre joueur</h2>\n        </div>\n\n        <div className=\"bg-gray-100 rounded-lg p-4 mb-6\">\n          <p className=\"text-sm text-gray-600 mb-2\">Code de la partie :</p>\n          <div className=\"flex items-center gap-2\">\n            <code className=\"flex-1 bg-white px-4 py-2 rounded border border-gray-300 font-mono text-lg\">\n              {gameId}\n            </code>\n            <button\n              onClick={copyGameId}\n              className=\"p-2 hover:bg-gray-200 rounded-lg transition-colors\"\n              title=\"Copier le code\"\n            >\n              <Copy className=\"w-5 h-5 text-gray-600\" />\n            </button>\n          </div>\n        </div>\n\n        <div className=\"text-center text-gray-600 mb-6\">\n          <p>Partagez ce code avec votre adversaire pour qu'il puisse rejoindre la partie.</p>\n        </div>\n\n        <button\n          onClick={onCancel}\n          className=\"w-full bg-gray-200 text-gray-800 rounded-lg py-2 px-4 hover:bg-gray-300 transition-colors\"\n        >\n          Annuler\n        </button>\n\n        {copied && (\n          <motion.div\n            className=\"fixed bottom-4 right-4 bg-black text-white px-4 py-2 rounded-lg\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 50 }}\n          >\n            Code copié !\n          </motion.div>\n        )}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default WaitingRoom;","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Users, Copy, ArrowRight } from 'lucide-react';\nimport { nanoid } from 'nanoid';\nimport WaitingRoom from './WaitingRoom';\n\ninterface LobbyScreenProps {\n  onJoinGame: (gameId: string, playerNumber: number) => void;\n}\n\nconst LobbyScreen: React.FC<LobbyScreenProps> = ({ onJoinGame }) => {\n  const [gameCode, setGameCode] = useState('');\n  const [waitingRoomId, setWaitingRoomId] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const createNewGame = () => {\n    const newGameCode = nanoid(6).toUpperCase();\n    setWaitingRoomId(newGameCode);\n  };\n\n  const joinExistingGame = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (gameCode.length === 6) {\n      onJoinGame(gameCode.toUpperCase(), 2);\n    }\n  };\n\n  const handleCancel = () => {\n    setWaitingRoomId(null);\n  };\n\n  if (waitingRoomId) {\n    return (\n      <WaitingRoom \n        gameId={waitingRoomId} \n        onCancel={handleCancel}\n        onStart={() => onJoinGame(waitingRoomId, 1)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-600 to-blue-800 flex items-center justify-center p-4\">\n      <motion.div \n        className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Game of 11</h1>\n          <p className=\"text-gray-600\">Jouez avec un ami en ligne</p>\n        </div>\n\n        <div className=\"space-y-6\">\n          <motion.button\n            className=\"w-full bg-blue-600 text-white rounded-lg py-3 px-4 flex items-center justify-center gap-2 font-semibold\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={createNewGame}\n          >\n            <Users className=\"w-5 h-5\" />\n            Créer une nouvelle partie\n          </motion.button>\n\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">ou</span>\n            </div>\n          </div>\n\n          <form onSubmit={joinExistingGame} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"gameCode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Rejoindre avec un code\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  id=\"gameCode\"\n                  maxLength={6}\n                  className=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-center uppercase tracking-widest text-lg font-mono\"\n                  placeholder=\"ABC123\"\n                  value={gameCode}\n                  onChange={(e) => setGameCode(e.target.value.toUpperCase())}\n                />\n              </div>\n            </div>\n            <motion.button\n              type=\"submit\"\n              className=\"w-full bg-green-600 text-white rounded-lg py-3 px-4 flex items-center justify-center gap-2 font-semibold disabled:opacity-50\"\n              disabled={gameCode.length !== 6}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <ArrowRight className=\"w-5 h-5\" />\n              Rejoindre la partie\n            </motion.button>\n          </form>\n        </div>\n\n        {error && (\n          <motion.div\n            className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          >\n            {error}\n          </motion.div>\n        )}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default LobbyScreen;","import React, { useState } from 'react';\nimport GameBoard from './components/GameBoard';\nimport GameModeSelector from './components/GameModeSelector';\nimport LobbyScreen from './components/LobbyScreen';\n\ninterface GameState {\n  mode: 'computer' | 'multiplayer' | null;\n  inGame: boolean;\n  gameId?: string;\n  playerNumber?: number;\n}\n\nfunction App() {\n  const [gameState, setGameState] = useState<GameState>({\n    mode: null,\n    inGame: false\n  });\n\n  const handleSelectMode = (mode: 'computer' | 'multiplayer') => {\n    setGameState({\n      mode,\n      inGame: mode === 'computer'\n    });\n  };\n\n  const handleJoinGame = (gameId: string, playerNumber: number) => {\n    setGameState({\n      mode: 'multiplayer',\n      inGame: true,\n      gameId,\n      playerNumber\n    });\n  };\n\n  const handleBack = () => {\n    setGameState({\n      mode: null,\n      inGame: false\n    });\n  };\n\n  // Si on est en mode ordinateur ou si la partie est déjà commencée\n  if (gameState.inGame) {\n    return (\n      <div className=\"min-h-screen bg-gray-100\">\n        <header className=\"bg-blue-600 text-white p-4 text-center\">\n          <h1 className=\"text-3xl font-bold\">Game of 11</h1>\n          <p className=\"text-sm mt-2\">\n            {gameState.mode === 'computer' ? 'Mode Ordinateur' : 'Mode Multijoueur'}\n          </p>\n          {gameState.gameId && (\n            <p className=\"text-sm mt-1 bg-blue-700 inline-block px-3 py-1 rounded-full\">\n              Code partie: {gameState.gameId}\n            </p>\n          )}\n        </header>\n        <GameBoard \n          isComputerOpponent={gameState.mode === 'computer'}\n          gameId={gameState.gameId}\n          playerNumber={gameState.playerNumber}\n        />\n      </div>\n    );\n  }\n\n  // Si on est en mode multijoueur mais pas encore en partie\n  if (gameState.mode === 'multiplayer') {\n    return <LobbyScreen onJoinGame={handleJoinGame} onBack={handleBack} />;\n  }\n\n  // Écran de sélection du mode de jeu\n  return <GameModeSelector onSelectMode={handleSelectMode} />;\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","Card","card","onClick","isSelectable","isHidden","isSelected","getSuitColor","suit","getSuitSymbol","jsx","motion","jsxs","defaultAttributes","toKebabCase","string","createLucideIcon","iconName","iconNode","Component","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","className","children","rest","ref","createElement","tag","attrs","ArrowDownCircle","ArrowDown","ArrowRight","Bot","Club","Copy","Diamond","Layers","Library","Loader","Trophy","User","Users","PlayerHand","cards","isOpponent","selectedCard","onCardClick","isCurrentPlayer","playerName","score","index","TableCards","selectedCards","TurnIndicator","currentPlayer","isComputerThinking","deckCount","tableCardsCount","CapturedCards","clubsCount","hasTenOfDiamonds","hasTwoOfClubs","LayersIcon","CardAnimation","onComplete","ComputerMoveIndicator","capturedCards","showAnimation","setShowAnimation","useState","showCapture","setShowCapture","handleAnimationComplete","GameOverModal","players","matchWinner","onNewGame","onNewMatch","getPlayerStats","player","otherPlayer","tenOfDiamonds","twoOfClubs","otherClubsCount","cardsCount","otherCardsCount","stats","SUITS","RANKS","createDeck","deck","rank","getValue","shuffleDeck","newDeck","i","j","handleInitialTableCards","tableCards","updatedDeck","jackCards","calculateFinalPoints","playerCards","otherPlayerCards","points","playerClubs","otherPlayerClubs","createCardKey","removeDuplicateCards","uniqueCards","key","handleEndGame","state","playerIndex","remainingTableCards","lastCapturingPlayer","finalCapturer","player1FinalCards","player2FinalCards","player1Score","player2Score","newMatchPoints","useGameState","isComputerOpponent","lastStartingPlayer","setLastStartingPlayer","setLastCapturingPlayer","setState","initializeGame","useCallback","initialDeck","player1Cards","player2Cards","startingPlayer","prev","startNewMatch","playMove","otherPlayerIndex","newPlayerCards","newCapturedCards","newTableCards","captured","needsNewCards","isRoundOver","newPlayer1Cards","newPlayer2Cards","calculateSum","sum","findAllCombinations","playerCard","combinations","sameRankCards","validCards","findCombinationsSum11","start","current","isJackMove","getValidJackTargets","canAddCardToSelection","selectedTableCards","newCard","useCardSelection","onPlayMove","setSelectedCard","setSelectedTableCards","clearSelection","handleCardSelect","handleTableCardSelect","tableCard","handlePlaceCard","validTargets","evaluateMove","findBestMove","gameState","computerCards","bestMove","bestScore","ace","combination","findBestCardToPlay","nonClubCards","useComputerPlayer","computerMove","setComputerMove","setIsComputerThinking","useEffect","isActive","timer","playTimer","GameBoard","gameId","playerNumber","handleCardClick","playerNum","GameModeSelector","onSelectMode","API_URL","SocketService","__publicField","io","callback","socketService","WaitingRoom","onCancel","onStart","copied","setCopied","React","copyGameId","LobbyScreen","onJoinGame","gameCode","setGameCode","waitingRoomId","setWaitingRoomId","error","setError","createNewGame","newGameCode","nanoid","joinExistingGame","handleCancel","App","setGameState","handleSelectMode","mode","handleJoinGame","handleBack","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}